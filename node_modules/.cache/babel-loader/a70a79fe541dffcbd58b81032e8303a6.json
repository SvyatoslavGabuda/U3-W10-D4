{"ast":null,"code":"const initialState = {\n  favorite: {\n    companies: [],\n    jobs: []\n  },\n  some: null\n};\n\nconst mainReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case \"SAVE_FAV\":\n      if (state.favorite.companies.includes(action.payload)) {\n        console.log(\"yes\");\n        return state;\n      } else {\n        console.log(\"nope\");\n        return { ...state,\n          favorite: { ...state.favorite,\n            companies: [...state.favorite.companies, action.payload]\n          }\n        };\n      }\n\n    case \"REMOVE_FAV\":\n      return { ...state,\n        favorite: { ...state.favorite,\n          companies: state.favorite.companies.filter(job => job._id !== action.payload)\n        }\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport default mainReducer;","map":{"version":3,"names":["initialState","favorite","companies","jobs","some","mainReducer","state","action","type","includes","payload","console","log","filter","job","_id"],"sources":["C:/Users/svy/Desktop/progect/U3-W10-D4/src/redux/reducers.js"],"sourcesContent":["const initialState = {\r\n  favorite: {\r\n    companies: [],\r\n    jobs: [],\r\n  },\r\n  some: null,\r\n};\r\n\r\nconst mainReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"SAVE_FAV\":\r\n      if (state.favorite.companies.includes(action.payload)) {\r\n        console.log(\"yes\");\r\n        return state;\r\n      } else {\r\n        console.log(\"nope\");\r\n        return {\r\n          ...state,\r\n          favorite: {\r\n            ...state.favorite,\r\n\r\n            companies: [...state.favorite.companies, action.payload],\r\n          },\r\n        };\r\n      }\r\n\r\n    case \"REMOVE_FAV\":\r\n      return {\r\n        ...state,\r\n        favorite: {\r\n          ...state.favorite,\r\n          companies: state.favorite.companies.filter((job) => job._id !== action.payload),\r\n        },\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport default mainReducer;\r\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG;EACnBC,QAAQ,EAAE;IACRC,SAAS,EAAE,EADH;IAERC,IAAI,EAAE;EAFE,CADS;EAKnBC,IAAI,EAAE;AALa,CAArB;;AAQA,MAAMC,WAAW,GAAG,YAAkC;EAAA,IAAjCC,KAAiC,uEAAzBN,YAAyB;EAAA,IAAXO,MAAW;;EACpD,QAAQA,MAAM,CAACC,IAAf;IACE,KAAK,UAAL;MACE,IAAIF,KAAK,CAACL,QAAN,CAAeC,SAAf,CAAyBO,QAAzB,CAAkCF,MAAM,CAACG,OAAzC,CAAJ,EAAuD;QACrDC,OAAO,CAACC,GAAR,CAAY,KAAZ;QACA,OAAON,KAAP;MACD,CAHD,MAGO;QACLK,OAAO,CAACC,GAAR,CAAY,MAAZ;QACA,OAAO,EACL,GAAGN,KADE;UAELL,QAAQ,EAAE,EACR,GAAGK,KAAK,CAACL,QADD;YAGRC,SAAS,EAAE,CAAC,GAAGI,KAAK,CAACL,QAAN,CAAeC,SAAnB,EAA8BK,MAAM,CAACG,OAArC;UAHH;QAFL,CAAP;MAQD;;IAEH,KAAK,YAAL;MACE,OAAO,EACL,GAAGJ,KADE;QAELL,QAAQ,EAAE,EACR,GAAGK,KAAK,CAACL,QADD;UAERC,SAAS,EAAEI,KAAK,CAACL,QAAN,CAAeC,SAAf,CAAyBW,MAAzB,CAAiCC,GAAD,IAASA,GAAG,CAACC,GAAJ,KAAYR,MAAM,CAACG,OAA5D;QAFH;MAFL,CAAP;;IAQF;MACE,OAAOJ,KAAP;EA3BJ;AA6BD,CA9BD;;AA+BA,eAAeD,WAAf"},"metadata":{},"sourceType":"module"}